{"version":3,"sources":["../../src/api/index.js"],"names":["config","api","get","req","res","json","description","version","next","allData","includes","params","all","body","query","numberPerPage","Number","page","start","end","data","transactions","map","t","origin","destination","console","log"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;kBAGe,gBAAgB;AAAA,KAAbA,MAAa,QAAbA,MAAa;;AAC9B,KAAIC,MAAM,sBAAV;;AAEAA,KAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,IAAJ,CAAS,EAAEC,aAAa,eAAf,EAAgCC,yBAAhC,EAAT;AACA,EAFD;;AAIAN,KAAIC,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWI,IAAX,EAAoB;AAC5C,MAAMC,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,GAAhB,EAAqB,CAArB,EAAwBC,QAAxB,CAAkCP,IAAIQ,MAAJ,CAAWC,GAAX,IAAkBT,IAAIU,IAAJ,CAASD,GAA3B,IAAkCT,IAAIW,KAAJ,CAAUF,GAA5C,IAAmD,EAArF,CAAhB;AACA,MAAMG,gBAAgBC,OAAOb,IAAIQ,MAAJ,CAAWI,aAAX,IAA4BZ,IAAIU,IAAJ,CAASE,aAArC,IAAsDZ,IAAIW,KAAJ,CAAUC,aAAhE,IAAiF,EAAxF,CAAtB;AACA,MAAME,OAAOD,OAAOb,IAAIQ,MAAJ,CAAWM,IAAX,IAAmBd,IAAIU,IAAJ,CAASI,IAA5B,IAAoCd,IAAIW,KAAJ,CAAUG,IAA9C,IAAsD,CAA7D,CAAb;;AAEA,MAAMC,QAAQD,OAAOF,aAArB;AACA,MAAMI,MAAMD,QAAQH,aAApB;;AAEA,MAAMK,OAAO,mBAAM,uBAAUC,sBAAV,CAAN,EAA+BH,KAA/B,EAAsCC,GAAtC,EAA2CG,GAA3C,CAA+C,aAAK;AAChE,OAAGb,YAAY,KAAf,EAAqB;AACpB,WAAOc,EAAEC,MAAT;AACA,WAAOD,EAAEE,WAAT;AACA;;AAED,UAAOF,CAAP;AACA,GAPY,CAAb;;AASAG,UAAQC,GAAR,CAAYlB,OAAZ;;AAEAL,MAAIC,IAAJ,CAAS,EAAEgB,cAAcD,IAAhB,EAAT;AACA,EApBD;;AAsBA,QAAOnB,GAAP;AACA,C","file":"index.js","sourcesContent":["import { version } from '../../package.json';\nimport { Router } from 'express';\nimport transactions from './../models/transactions'\nimport { cloneDeep, slice } from 'lodash'\n\n\nexport default ({ config }) => {\n\tlet api = Router();\n\n\tapi.get('/', (req, res) => {\n\t\tres.json({ description: \"Hi developer!\", version });\n\t});\n\n\tapi.get('/transactions', (req, res, next) => {\n\t\tconst allData = ['true', 'yes', '1', 1].includes((req.params.all || req.body.all || req.query.all || \"\"))\n\t\tconst numberPerPage = Number(req.params.numberPerPage || req.body.numberPerPage || req.query.numberPerPage || 60)\n\t\tconst page = Number(req.params.page || req.body.page || req.query.page || 0)\n\n\t\tconst start = page * numberPerPage\n\t\tconst end = start + numberPerPage\n\n\t\tconst data = slice(cloneDeep(transactions), start, end).map(t => {\n\t\t\tif(allData === false){\n\t\t\t\tdelete t.origin\n\t\t\t\tdelete t.destination\n\t\t\t}\n\n\t\t\treturn t\n\t\t})\n\n\t\tconsole.log(allData)\n\n\t\tres.json({ transactions: data })\n\t});\n\n\treturn api;\n}\n"]}